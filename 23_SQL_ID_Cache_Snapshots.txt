SELECT
   HSS.INSTANCE_NUMBER,
   HSS.snap_id,
   concat('->',to_char(hss.end_interval_time+1/288,
      'YY-MM-DD  HH24:MI')) date_time,
    to_char(HSS.end_interval_time,'YYYY-IW') week,
    to_char(HSS.end_interval_time,'DY') day,
    to_char(HSS.end_interval_time,'yyyy-mm-dd') date_,
    concat('->',to_char(HSS.end_interval_time+1/288,
      'HH24:MI')) time,
  hsq.plan_hash_value,
  HSQ.EXECUTIONS_DELTA EXECUTIONS,
  HSQ.ROWS_PROCESSED_DELTA RECORDS,
  HSQ.DISK_READS_DELTA DISK_READS,
  HSQ.BUFFER_GETS_DELTA BUFFER_GETS,
  round(HSQ.ELAPSED_TIME_DELTA / 1000000) ELAPSED_TIME_SEC,
  round((HSQ.ELAPSED_TIME_DELTA-HSQ.CPU_TIME_DELTA)/1000000) WAIT_TIME_SEC,
  round(HSQ.CPU_TIME_DELTA / 1000000) CPU_TIME_SEC,
  round(HSQ.IOWAIT_DELTA / 1000000) IO_WAIT_TIME_SEC,
  round(HSQ.APWAIT_DELTA / 1000000) APWAIT_TIME_SEC,
  round(HSQ.CCWAIT_DELTA / 1000000) CONCUR_WAIT_TIME_SEC,
  round(HSQ.CLWAIT_DELTA / 1000000) CLUSTER_WAIT_TIME_SEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.ROWS_PROCESSED_DELTA / HSQ.EXECUTIONS_DELTA), 2) RECORDS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.DISK_READS_DELTA / HSQ.EXECUTIONS_DELTA), 2) DISK_READS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.BUFFER_GETS_DELTA / HSQ.EXECUTIONS_DELTA), 2) BUFFER_GETS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.ELAPSED_TIME_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) ELAPSED_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    (HSQ.ELAPSED_TIME_DELTA-HSQ.CPU_TIME_DELTA)/ HSQ.EXECUTIONS_DELTA / 1000), 3) WAIT_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.CPU_TIME_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) CPU_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.IOWAIT_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) IO_WAIT_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.APWAIT_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) APP_WAIT_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.CCWAIT_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) CONCUR_WAIT_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.EXECUTIONS_DELTA, 0, 0,
    HSQ.CLWAIT_DELTA / HSQ.EXECUTIONS_DELTA / 1000), 3) CLUSTER_WAIT_TIME_MS_PER_EXEC,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.DISK_READS_DELTA / HSQ.ROWS_PROCESSED_DELTA), 2) DISK_READS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.BUFFER_GETS_DELTA / HSQ.ROWS_PROCESSED_DELTA), 2) BUFFER_GETS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.ELAPSED_TIME_DELTA / 1000 / HSQ.ROWS_PROCESSED_DELTA), 2) ELAPSED_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    (HSQ.ELAPSED_TIME_DELTA-HSQ.CPU_TIME_DELTA)/ HSQ.ROWS_PROCESSED_DELTA / 1000), 3) WAIT_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.CPU_TIME_DELTA / HSQ.ROWS_PROCESSED_DELTA / 1000), 3) CPU_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.IOWAIT_DELTA / HSQ.ROWS_PROCESSED_DELTA / 1000), 3) IO_WAIT_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.APWAIT_DELTA / HSQ.ROWS_PROCESSED_DELTA / 1000), 3) APP_WAIT_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.CCWAIT_DELTA / HSQ.ROWS_PROCESSED_DELTA / 1000), 3) CONCUR_WAIT_TIME_MS_PER_RECORD,
  ROUND(DECODE(HSQ.ROWS_PROCESSED_DELTA, 0, 0,
    HSQ.CLWAIT_DELTA / HSQ.ROWS_PROCESSED_DELTA / 1000), 3) CLUSTER_WAIT_TIME_MS_PER_REC
FROM
  DBA_HIST_SQLSTAT HSQ,
  DBA_HIST_SNAPSHOT HSS
WHERE
  HSQ.INSTANCE_NUMBER = HSS.INSTANCE_NUMBER AND
  HSQ.SNAP_ID = HSS.SNAP_ID AND
  HSQ.SQL_ID = '<SQL_ID>'                                                   /************** Edit here 1/1 *******************/
ORDER BY
  HSS.SNAP_ID DESC;

SELECT NULL SNAP_ID, NULL DBID, NULL INST, NULL BEGIN_TIME, NULL END_TIME, NULL SECONDS, 
  NULL SNAPSHOT_TYPE, NULL FLUSH_S, NULL CON_ID FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL SNAP_ID, NULL DBID, NULL INST, NULL BEGIN_TIME, NULL END_TIME, NULL SECONDS, 
  NULL SNAPSHOT_TYPE, NULL FLUSH_S, NULL CON_ID FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    BEGIN_SNAP_ID,    
    END_SNAP_ID,
    OWNPDB
  FROM
  ( SELECT
      -2 DBID,                     /* -2 for all DBIDs, -1 for current DBID */
      -2 INSTANCE_NUMBER,          /* -2 for all instances, -1 for current instance */
      TO_DATE('01.01.1000 14:27:44', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 14:37:26', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,   /* explicit SNAP_IDs sometimes required for ASH partition pruning */
      -1 END_SNAP_ID
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE ),
  (SELECT CON_ID OWNPDB FROM V$PDBS)
)
SELECT
  TO_CHAR(HSS.SNAP_ID, 999990) SNAP_ID,
  HSS.DBID,
  TO_CHAR(HSS.INSTANCE_NUMBER, 990) INST,
  TO_CHAR(HSS.BEGIN_INTERVAL_TIME, 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
  TO_CHAR(HSS.END_INTERVAL_TIME, 'dd.mm.yyyy hh24:mi:ss') END_TIME,
  TO_CHAR(TO_CHAR(HSS.END_INTERVAL_TIME, 'SSSSS') -
    TO_CHAR(HSS.BEGIN_INTERVAL_TIME, 'SSSSS') +
    86400 * (TO_CHAR(HSS.END_INTERVAL_TIME, 'J') - 
             TO_CHAR(HSS.BEGIN_INTERVAL_TIME, 'J')), 999990)
    SECONDS,
  DECODE(SNAP_FLAG,
    0, 'AUTOMATIC',
    1, 'MANUAL',
    2, 'IMPORTED',
    4, 'TUNING / DIAG PACK NOT ENABLED') SNAPSHOT_TYPE,
  TO_CHAR(EXTRACT(HOUR FROM HSS.FLUSH_ELAPSED * 3600) + 
    EXTRACT(MINUTE FROM HSS.FLUSH_ELAPSED) * 60 + 
    EXTRACT(SECOND FROM HSS.FLUSH_ELAPSED), 999990) FLUSH_S,
    HSS.CON_ID
FROM
  BASIS_INFO BI,
  DBA_HIST_SNAPSHOT HSS
WHERE
  (BI.DBID = -2 OR BI.DBID = HSS.DBID ) AND
  (HSS.CON_ID = BI.OWNPDB) AND
  ( BI.INSTANCE_NUMBER = -2 OR BI.INSTANCE_NUMBER = HSS.INSTANCE_NUMBER ) AND
  BI.BEGIN_TIME <= HSS.BEGIN_INTERVAL_TIME AND
  BI.END_TIME >= HSS.END_INTERVAL_TIME AND
  ( BI.BEGIN_SNAP_ID = -1 OR BI.BEGIN_SNAP_ID <= HSS.SNAP_ID ) AND
  ( BI.END_SNAP_ID = -1 OR BI.END_SNAP_ID >= HSS.SNAP_ID )
ORDER BY
  HSS.BEGIN_INTERVAL_TIME DESC
));

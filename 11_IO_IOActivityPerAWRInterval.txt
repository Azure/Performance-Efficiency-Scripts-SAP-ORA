SELECT NULL BEGIN_TIME, NULL INST, NULL READ_MB_PER_S, NULL WRITE_MB_PER_S, NULL SEQ_AVG_MS,
  NULL SCAT_AVG_MS, NULL LFS_AVG_MS, NULL LPW_AVG_MS, NULL CNC, NULL FBW FROM DUAL
  WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL INST, NULL READ_MB_PER_S, NULL WRITE_MB_PER_S, NULL SEQ_AVG_MS,
  NULL SCAT_AVG_MS, NULL LFS_AVG_MS, NULL LPW_AVG_MS, NULL CNC, NULL FBW FROM DUAL
  WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'),
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'),
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    AGGREGATE_BY,
    EXCLUDE_WEEKENDS,
    ONLY_FREE_BUFFER_WAITS,
    ONLY_CHECKPOINT_NOT_COMPLETE
  FROM
  ( SELECT
      -1 DBID,
      -2 INSTANCE_NUMBER,
        /* -1 for current instance, -2 for all instances */
      TO_DATE(rpad('1980-01-01 00:00',
        19,':00'),'YYYY-MM-DD HH24:MI:SS') BEGIN_DATE,
      TO_DATE(rpad('9999-12-31 00:00',
        19,':00'),'YYYY-MM-DD HH24:MI:SS') END_DATE,
      'SNAPSHOT' AGGREGATE_BY,
        /* SNAPSHOT, DAY, HOUR_OF_DAY */
      ' ' EXCLUDE_WEEKENDS,
      ' ' ONLY_FREE_BUFFER_WAITS,
      ' ' ONLY_CHECKPOINT_NOT_COMPLETE
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */
    DBID,
    INSTANCE_NUMBER,
    SNAP_ID,
    MIN_SNAP_ID,
    PREV_SNAP_ID,
    BEGIN_INTERVAL_TIME,
    END_INTERVAL_TIME,
    INTERVAL_SECONDS,
    SUM(INTERVAL_SECONDS) OVER () TOTAL_SECONDS,
    RESTART
  FROM
  ( SELECT
      HSS2.DBID,
      HSS2.INSTANCE_NUMBER,
      HSS2.SNAP_ID,
      FIRST_VALUE(HSS2.SNAP_ID) OVER (ORDER BY HSS2.SNAP_ID) MIN_SNAP_ID,
      HSS1.SNAP_ID PREV_SNAP_ID,
      HSS2.BEGIN_INTERVAL_TIME,
      HSS2.END_INTERVAL_TIME,
      TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
        TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
        86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') -
                 TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
        INTERVAL_SECONDS,
      DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
    FROM
      BASIS_INFO BI,
      DBA_HIST_SNAPSHOT HSS1,
      DBA_HIST_SNAPSHOT HSS2
    WHERE
      HSS2.DBID = BI.DBID AND
      HSS1.DBID (+) = HSS2.DBID AND
      (BI.INSTANCE_NUMBER = -2 OR HSS2.INSTANCE_NUMBER = BI.INSTANCE_NUMBER) AND
      HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
      HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
      HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
    ORDER BY
      HSS2.SNAP_ID
  )
)
SELECT
  RPAD('BEGIN TIME:', 12, ' ') || TO_CHAR(MIN(BEGIN_INTERVAL_TIME),
  'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
  NULL INST,
  NULL READ_MB_PER_S,
  NULL WRITE_MB_PER_S,
  NULL SEQ_AVG_MS,
  NULL SCAT_AVG_MS,
  NULL LFS_AVG_MS,
  NULL LPW_AVG_MS,
  NULL CNC,
  NULL FBW
FROM
  SNAPSHOTS
WHERE
  SNAP_ID != MIN_SNAP_ID
UNION ALL
( SELECT
    RPAD('END TIME:', 12, ' ') || TO_CHAR(MAX(END_INTERVAL_TIME),
    'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    NULL INST,
    NULL READ_MB_PER_S,
    NULL WRITE_MB_PER_S,
    NULL SEQ_AVG_MS,
    NULL SCAT_AVG_MS,
    NULL LFS_AVG_MS,
    NULL LPW_AVG_MS,
    NULL CNC,
    NULL FBW
  FROM
    SNAPSHOTS
)
UNION ALL
( SELECT
    'AGGREGATED BY: ' || AGGREGATE_BY BEGIN_TIME,
    NULL INST,
    NULL READ_MB_PER_S,
    NULL WRITE_MB_PER_S,
    NULL SEQ_AVG_MS,
    NULL SCAT_AVG_MS,
    NULL LFS_AVG_MS,
    NULL LPW_AVG_MS,
    NULL CNC,
    NULL FBW
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    'WEEKENDS EXCLUDED: ' || DECODE(EXCLUDE_WEEKENDS, 'X', 'YES', 'NO') BEGIN_TIME,
    NULL INST,
    NULL READ_MB_PER_S,
    NULL WRITE_MB_PER_S,
    NULL SEQ_AVG_MS,
    NULL SCAT_AVG_MS,
    NULL LFS_AVG_MS,
    NULL LPW_AVG_MS,
    NULL CNC,
    NULL FBW
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    NULL BEGIN_TIME,
    NULL INST,
    NULL READ_MB_PER_S,
    NULL WRITE_MB_PER_S,
    NULL SEQ_AVG_MS,
    NULL SCAT_AVG_MS,
    NULL LFS_AVG_MS,
    NULL LPW_AVG_MS,
    NULL CNC,
    NULL FBW
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    BEGIN_TIME,
    TO_CHAR(INSTANCE_NUMBER, 990) INST,
    TO_CHAR(READ_BYTES / 1024 / 1024 / INTERVAL_SECONDS, 999999990.99) READ_MB_PER_S,
    TO_CHAR(WRITE_BYTES / 1024 / 1024 / INTERVAL_SECONDS, 9999999990.99) WRITE_MB_PER_S,
    TO_CHAR(DECODE(SEQ_WAITS, 0, 0, SEQ_WAIT_TIME_MS / SEQ_WAITS), 999990.99) SEQ_AVG_MS,
    TO_CHAR(DECODE(SCAT_WAITS, 0, 0, SCAT_WAIT_TIME_MS / SCAT_WAITS), 9999990.99) SCAT_AVG_MS,
    TO_CHAR(DECODE(LFS_WAITS, 0, 0, LFS_WAIT_TIME_MS / LFS_WAITS), 9999990.99) LFS_AVG_MS,
    TO_CHAR(DECODE(LPW_WAITS, 0, 0, LPW_WAIT_TIME_MS / LPW_WAITS), 9999990.99) LPW_AVG_MS,
    CNC,
    FBW
  FROM
  ( SELECT
      BEGIN_TIME,
      SUM(DECODE(NAME, 'physical read total bytes', TOTAL_WAITS, 0)) READ_BYTES,
      SUM(DECODE(NAME, 'physical write total bytes', TOTAL_WAITS, 0)) WRITE_BYTES,
      TO_CHAR(SUM(DECODE(NAME,
        'db file sequential read', TOTAL_WAITS, 0))) SEQ_WAITS,
      TO_CHAR(SUM(DECODE(NAME,
        'db file sequential read', TIME_WAITED_MICRO / 1000, 0))) SEQ_WAIT_TIME_MS,
      TO_CHAR(SUM(DECODE(NAME,
        'db file scattered read', TOTAL_WAITS, 0))) SCAT_WAITS,
      TO_CHAR(SUM(DECODE(NAME,
        'db file scattered read', TIME_WAITED_MICRO / 1000, 0))) SCAT_WAIT_TIME_MS,
      TO_CHAR(SUM(DECODE(NAME,
        'log file sync', TOTAL_WAITS, 0))) LFS_WAITS,
      TO_CHAR(SUM(DECODE(NAME,
        'log file sync', TIME_WAITED_MICRO / 1000, 0))) LFS_WAIT_TIME_MS,
      TO_CHAR(SUM(DECODE(NAME,
        'log file parallel write', TOTAL_WAITS, 0))) LPW_WAITS,
      TO_CHAR(SUM(DECODE(NAME,
        'log file parallel write', TIME_WAITED_MICRO / 1000, 0))) LPW_WAIT_TIME_MS,
      DECODE(SUM(DECODE(NAME,
        'log file switch (checkpoint incomplete)',
        TOTAL_WAITS, 0)), 0, ' ', 'X') CNC,
      DECODE(SUM(DECODE(NAME, 'free buffer waits',
        TOTAL_WAITS, 0)), 0, ' ', 'X') FBW,
      MIN(ONLY_CHECKPOINT_NOT_COMPLETE) ONLY_CHECKPOINT_NOT_COMPLETE,
      MIN(ONLY_FREE_BUFFER_WAITS) ONLY_FREE_BUFFER_WAITS,
      SUM(INTERVAL_SECONDS) / 6 INTERVAL_SECONDS,
      INSTANCE_NUMBER
    FROM
    ( SELECT
        DECODE(BI.AGGREGATE_BY,
          'SNAPSHOT', TO_CHAR(SS.BEGIN_INTERVAL_TIME,
          'YYYY-MM-DD HH24:MI:SS'),
          'DAY', TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD (DY)'),
          'HOUR_OF_DAY', TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'HH24') || ':00') BEGIN_TIME,
        HSE2.EVENT_NAME NAME,
        DECODE(SS.RESTART, 'NO', HSE2.TOTAL_WAITS - NVL(HSE1.TOTAL_WAITS, 0),
          HSE2.TOTAL_WAITS) TOTAL_WAITS,
        DECODE(SS.RESTART, 'NO', HSE2.TOTAL_TIMEOUTS - NVL(HSE1.TOTAL_TIMEOUTS, 0),
          HSE2.TOTAL_TIMEOUTS) TOTAL_TIMEOUTS,
        DECODE(SS.RESTART, 'NO', HSE2.TIME_WAITED_MICRO -
          NVL(HSE1.TIME_WAITED_MICRO, 0), HSE2.TIME_WAITED_MICRO) TIME_WAITED_MICRO,
        BI.ONLY_CHECKPOINT_NOT_COMPLETE,
        BI.ONLY_FREE_BUFFER_WAITS,
        SS.INTERVAL_SECONDS,
        SS.INSTANCE_NUMBER,
        SS.SNAP_ID
      FROM
        BASIS_INFO BI,
        SNAPSHOTS SS,
        DBA_HIST_SYSTEM_EVENT HSE1,
        DBA_HIST_SYSTEM_EVENT HSE2
      WHERE
        HSE2.SNAP_ID = SS.SNAP_ID AND
        HSE1.SNAP_ID (+) = HSE2.SNAP_ID - 1 AND
        HSE2.DBID = SS.DBID AND
        HSE1.DBID (+) = HSE2.DBID AND
        HSE2.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSE1.INSTANCE_NUMBER (+) = HSE2.INSTANCE_NUMBER AND
        HSE1.EVENT_NAME (+) = HSE2.EVENT_NAME AND
        SS.PREV_SNAP_ID IS NOT NULL AND
        SS.SNAP_ID != SS.MIN_SNAP_ID AND
        HSE2.EVENT_NAME IN
        ( 'db file sequential read',
          'db file scattered read',
          'log file sync',
          'log file parallel write',
          'log file switch (checkpoint incomplete)',
          'free buffer waits'
        ) AND
        ( BI.EXCLUDE_WEEKENDS = ' ' OR
          TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'D') NOT IN (7, 1) )
      UNION ALL
      ( SELECT
          DECODE(BI.AGGREGATE_BY,
            'SNAPSHOT', TO_CHAR(SS.BEGIN_INTERVAL_TIME,
            'YYYY-MM-DD HH24:MI:SS'),
            'DAY', TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD (DY)'),
            'HOUR_OF_DAY', TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'HH24') || ':00') BEGIN_TIME,
          HSY2.STAT_NAME NAME,
          DECODE(SS.RESTART, 'NO', HSY2.VALUE - NVL(HSY1.VALUE, 0),
            HSY2.VALUE) TOTAL_WAITS,
          NULL TOTAL_TIMEOUTS,
          NULL TIME_WAITED_MICRO,
          BI.ONLY_CHECKPOINT_NOT_COMPLETE,
          BI.ONLY_FREE_BUFFER_WAITS,
          SS.INTERVAL_SECONDS,
          SS.INSTANCE_NUMBER,
          SS.SNAP_ID
        FROM
          BASIS_INFO BI,
          SNAPSHOTS SS,
          DBA_HIST_SYSSTAT HSY1,
          DBA_HIST_SYSSTAT HSY2
        WHERE
          HSY2.SNAP_ID = SS.SNAP_ID AND
          HSY1.SNAP_ID (+) = HSY2.SNAP_ID - 1 AND
          HSY2.DBID = SS.DBID AND
          HSY1.DBID (+) = HSY2.DBID AND
          HSY2.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
          HSY1.INSTANCE_NUMBER (+) = HSY2.INSTANCE_NUMBER AND
          HSY1.STAT_NAME (+) = HSY2.STAT_NAME AND
          SS.PREV_SNAP_ID IS NOT NULL AND
          SS.SNAP_ID != SS.MIN_SNAP_ID AND
          HSY2.STAT_NAME IN
          ( 'physical read total bytes',
            'physical write total bytes'
          ) AND
          ( BI.EXCLUDE_WEEKENDS = ' ' OR
            TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'D') NOT IN (7, 1) )
      )
    )
    GROUP BY
      BEGIN_TIME,
      INSTANCE_NUMBER
    ORDER BY
      BEGIN_TIME DESC,
      INSTANCE_NUMBER
  )
  WHERE
    ( ONLY_CHECKPOINT_NOT_COMPLETE = 'X' AND
      ONLY_FREE_BUFFER_WAITS = 'X' AND
      ( CNC = 'X' OR FBW = 'X')
    ) OR
    ( ( ONLY_CHECKPOINT_NOT_COMPLETE = ' ' OR CNC = 'X' ) AND
      ( ONLY_FREE_BUFFER_WAITS = ' ' OR FBW = 'X' )
    )
)
));

